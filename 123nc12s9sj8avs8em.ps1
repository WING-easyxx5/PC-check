$isAdmin=([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator);if(-not $isAdmin){Start-Process PowerShell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs;exit};Add-Type -AssemblyName System.Windows.Forms;Add-Type -AssemblyName System.Drawing;[System.Windows.Forms.Application]::EnableVisualStyles();$global:scanRunning=$false;$global:appHistory=New-Object System.Collections.ArrayList;$global:historyFile="$env:APPDATA\TeamAstro\history.json";$global:recordingDetected=$false;$global:detectedRecordingApp="";$suspiciousProcesses=New-Object System.Collections.ArrayList;$suspiciousFiles=New-Object System.Collections.ArrayList;$deletedItems=New-Object System.Collections.ArrayList;$autoStartItems=New-Object System.Collections.ArrayList;$networkConnections=New-Object System.Collections.ArrayList;$roamingItems=New-Object System.Collections.ArrayList;$systemItems=New-Object System.Collections.ArrayList;$tabControls=New-Object System.Collections.ArrayList;$blockerWindows=New-Object System.Collections.ArrayList;$systemProcesses=@("svchost","dwm","winlogon","csrss","wininit","lsass","services","smss","system","explorer","conhost","dllhost","msiexec","winver","taskmgr","cmd","powershell","powershell_ise","rundll32","ctfmon","fontdrvhost","sihost","taskhostw","runtimebroker","textinputhost","searchhost","shellexperiencehost","startmenuexperiencehost","searchapp","applicationframehost","securityhealthservice","securityhealthsystray","unsecapp","audiodg","spoolsv","wmiprvse","searchindexer","gamebarpresencewriter","windowsinternal","microsoftedge","msedge");$windowsProcessPaths=@("C:\Windows\System32\","C:\Windows\SysWOW64\","C:\Windows\","C:\Program Files\WindowsApps\","C:\Program Files\Windows Defender\");$recordingProcesses=@("obs","obs64","streamlabs","xsplit","bandicam","fraps","nvidia","shadowplay","radeon","relive","teams","zoom","skype","recording","capture","stream","gamebar","gamebarpresencewriter","gamebarelementwindow","applicationframehost","userboost","msrdc","microsoftedge");$suspiciousRoamingTerms=@("1337","script","mod","cheat","gg","hack","trainer","bypass","inject","exploit","undetected");$screens=[System.Windows.Forms.Screen]::AllScreens;$primaryScreen=[System.Windows.Forms.Screen]::PrimaryScreen;foreach($screen in $screens){if($screen -ne $primaryScreen){$blocker=New-Object System.Windows.Forms.Form;$blocker.FormBorderStyle=[System.Windows.Forms.FormBorderStyle]::None;$blocker.StartPosition=[System.Windows.Forms.FormStartPosition]::Manual;$blocker.Location=$screen.Bounds.Location;$blocker.Size=$screen.Bounds.Size;$blocker.BackColor=[System.Drawing.Color]::Black;$blocker.Opacity=0.95;$blocker.TopMost=$true;$blocker.ShowInTaskbar=$false;$blockerLabel=New-Object System.Windows.Forms.Label;$blockerLabel.Text="TEAM ASTRO - BILDSCHIRM GESPERRT";$blockerLabel.ForeColor=[System.Drawing.Color]::White;$blockerLabel.Font=New-Object System.Drawing.Font("Impact",24);$blockerLabel.TextAlign=[System.Drawing.ContentAlignment]::MiddleCenter;$blockerLabel.Dock=[System.Windows.Forms.DockStyle]::Fill;$blocker.Controls.Add($blockerLabel);[void]$blockerWindows.Add($blocker);$blocker.Show()}};$splashScreen=New-Object System.Windows.Forms.Form;$splashScreen.Size=New-Object System.Drawing.Size(900,600);$splashScreen.FormBorderStyle="None";$splashScreen.BackColor=[System.Drawing.Color]::FromArgb(15,15,20);$splashScreen.TopMost=$true;$splashScreen.ShowInTaskbar=$false;$splashScreen.StartPosition="CenterScreen";$astroLabel=New-Object System.Windows.Forms.Label;$astroLabel.Text="ASTRO";$astroLabel.Font=New-Object System.Drawing.Font("Impact",48,[System.Drawing.FontStyle]::Bold);$astroLabel.ForeColor=[System.Drawing.Color]::DodgerBlue;$astroLabel.Location=New-Object System.Drawing.Point(350,200);$astroLabel.Size=New-Object System.Drawing.Size(200,80);$astroLabel.TextAlign=[System.Drawing.ContentAlignment]::MiddleCenter;$splashScreen.Controls.Add($astroLabel);$loadingText=New-Object System.Windows.Forms.Label;$loadingText.Location=New-Object System.Drawing.Point(0,400);$loadingText.Size=New-Object System.Drawing.Size(900,30);$loadingText.TextAlign=[System.Drawing.ContentAlignment]::MiddleCenter;$loadingText.ForeColor=[System.Drawing.Color]::White;$loadingText.BackColor=[System.Drawing.Color]::Transparent;$loadingText.Font=New-Object System.Drawing.Font("Segoe UI",12);$loadingText.Text="CHEAT SCANNER WIRD GELADEN...";$splashScreen.Controls.Add($loadingText);$percentText=New-Object System.Windows.Forms.Label;$percentText.Location=New-Object System.Drawing.Point(0,440);$percentText.Size=New-Object System.Drawing.Size(900,30);$percentText.TextAlign=[System.Drawing.ContentAlignment]::MiddleCenter;$percentText.ForeColor=[System.Drawing.Color]::White;$percentText.BackColor=[System.Drawing.Color]::Transparent;$percentText.Font=New-Object System.Drawing.Font("Segoe UI",14,[System.Drawing.FontStyle]::Bold);$percentText.Text="0%";$splashScreen.Controls.Add($percentText);$recordingSplashIndicator=New-Object System.Windows.Forms.Label;$recordingSplashIndicator.Text="● AUFNAHME BLOCKIERT: ";$recordingSplashIndicator.Font=New-Object System.Drawing.Font("Arial",12,[System.Drawing.FontStyle]::Bold);$recordingSplashIndicator.ForeColor=[System.Drawing.Color]::Red;$recordingSplashIndicator.Size=New-Object System.Drawing.Size(900,30);$recordingSplashIndicator.Location=New-Object System.Drawing.Point(0,370);$recordingSplashIndicator.TextAlign=[System.Drawing.ContentAlignment]::MiddleCenter;$recordingSplashIndicator.Visible=$false;$splashScreen.Controls.Add($recordingSplashIndicator);$loadingBarBg=New-Object System.Windows.Forms.Panel;$loadingBarBg.Size=New-Object System.Drawing.Size(600,10);$loadingBarBg.Location=New-Object System.Drawing.Point(150,480);$loadingBarBg.BackColor=[System.Drawing.Color]::FromArgb(40,40,60);$splashScreen.Controls.Add($loadingBarBg);$loadingBar=New-Object System.Windows.Forms.Panel;$loadingBar.Size=New-Object System.Drawing.Size(0,10);$loadingBar.Location=New-Object System.Drawing.Point(150,480);$loadingBar.BackColor=[System.Drawing.Color]::DodgerBlue;$splashScreen.Controls.Add($loadingBar);$splashScreen.Show();function Update-Progress{param([string]$message,[int]$percent);$loadingText.Text=$message;$percentText.Text="$percent%";$loadingBar.Width=($percent*6);[System.Windows.Forms.Application]::DoEvents()};Update-Progress "INITIALISIERE ASTRO..." 0;$mainWindow=New-Object System.Windows.Forms.Form;$mainWindow.Text="TEAM ASTRO";$mainWindow.Size=New-Object System.Drawing.Size(900,600);$mainWindow.BackColor=[System.Drawing.Color]::FromArgb(20,20,30);$mainWindow.FormBorderStyle=[System.Windows.Forms.FormBorderStyle]::FixedSingle;$mainWindow.MaximizeBox=$false;$mainWindow.StartPosition="CenterScreen";$mainWindow.Visible=$false;$recordingIndicator=New-Object System.Windows.Forms.Label;$recordingIndicator.Text="●";$recordingIndicator.Font=New-Object System.Drawing.Font("Arial",16,[System.Drawing.FontStyle]::Bold);$recordingIndicator.ForeColor=[System.Drawing.Color]::Lime;$recordingIndicator.Size=New-Object System.Drawing.Size(30,30);$recordingIndicator.Location=New-Object System.Drawing.Point(850,10);$recordingIndicator.Visible=$false;$mainWindow.Controls.Add($recordingIndicator);$recordingLabel=New-Object System.Windows.Forms.Label;$recordingLabel.Text="AUFNAHME ERKANNT!";$recordingLabel.Font=New-Object System.Drawing.Font("Segoe UI",10,[System.Drawing.FontStyle]::Bold);$recordingLabel.ForeColor=[System.Drawing.Color]::Red;$recordingLabel.Size=New-Object System.Drawing.Size(400,25);$recordingLabel.Location=New-Object System.Drawing.Point(20,10);$recordingLabel.Visible=$false;$mainWindow.Controls.Add($recordingLabel);Update-Progress "ERSTELLE INTERFACE..." 20;$mainPanel=New-Object System.Windows.Forms.Panel;$mainPanel.Location=New-Object System.Drawing.Point(0,40);$mainPanel.Size=New-Object System.Drawing.Size(900,560);$mainPanel.BackColor=[System.Drawing.Color]::FromArgb(30,30,60);$mainWindow.Controls.Add($mainPanel);$resultTabs=New-Object System.Windows.Forms.TabControl;$resultTabs.Location=New-Object System.Drawing.Point(20,20);$resultTabs.Size=New-Object System.Drawing.Size(860,480);$resultTabs.Font=New-Object System.Drawing.Font("Segoe UI",10);$resultTabs.BackColor=[System.Drawing.Color]::FromArgb(30,30,50);$resultTabs.ForeColor=[System.Drawing.Color]::White;$mainPanel.Controls.Add($resultTabs);$tabNames=@("PROZESSE","DATEISYSTEM","GELÖSCHTE DATEIEN","AUTOSTART","NETZWERK","ROAMING","SYSTEM","APP-VERLAUF");foreach($tabName in $tabNames){$tab=New-Object System.Windows.Forms.TabPage;$tab.Text=$tabName;$tab.BackColor=[System.Drawing.Color]::FromArgb(25,25,40);$tab.ForeColor=[System.Drawing.Color]::White;$resultTabs.Controls.Add($tab);$listView=New-Object System.Windows.Forms.ListView;$listView.Location=New-Object System.Drawing.Point(10,10);$listView.Size=New-Object System.Drawing.Size(830,440);$listView.View=[System.Windows.Forms.View]::Details;$listView.FullRowSelect=$true;$listView.HideSelection=$false;$listView.MultiSelect=$true;$listView.BackColor=[System.Drawing.Color]::FromArgb(30,30,50);$listView.ForeColor=[System.Drawing.Color]::White;$listView.Font=New-Object System.Drawing.Font("Consolas",9);$tab.Controls.Add($listView);[void]$tabControls.Add($listView)};$processList=$tabControls[0];$processList.Columns.Add("Name",200);$processList.Columns.Add("PID",80);$processList.Columns.Add("Pfad",550);$filesList=$tabControls[1];$filesList.Columns.Add("Datei",300);$filesList.Columns.Add("Typ",100);$filesList.Columns.Add("Pfad",430);$deletedList=$tabControls[2];$deletedList.Columns.Add("Zeit",150);$deletedList.Columns.Add("Datei",300);$deletedList.Columns.Add("Status",100);$deletedList.Columns.Add("Pfad",280);$autostartList=$tabControls[3];$autostartList.Columns.Add("Name",250);$autostartList.Columns.Add("Pfad",580);$networkList=$tabControls[4];$networkList.Columns.Add("Prozess",200);$networkList.Columns.Add("Remote IP",150);$networkList.Columns.Add("Port",100);$networkList.Columns.Add("Status",380);$roamingList=$tabControls[5];$roamingList.Columns.Add("Name",400);$roamingList.Columns.Add("Typ",150);$roamingList.Columns.Add("Größe",280);$systemList=$tabControls[6];$systemList.Columns.Add("Komponente",250);$systemList.Columns.Add("Details",580);$historyList=$tabControls[7];$historyList.Columns.Add("Zeit",120);$historyList.Columns.Add("Programm",180);$historyList.Columns.Add("Ergebnis",80);$historyList.Columns.Add("Anzahl",60);$historyList.Columns.Add("Details",350);Update-Progress "ERSTELLE BUTTONS..." 40;$scanBtn=New-Object System.Windows.Forms.Button;$scanBtn.Location=New-Object System.Drawing.Point(350,520);$scanBtn.Size=New-Object System.Drawing.Size(200,30);$scanBtn.Text="SCAN STARTEN";$scanBtn.BackColor=[System.Drawing.Color]::FromArgb(0,120,215);$scanBtn.ForeColor=[System.Drawing.Color]::White;$scanBtn.FlatStyle=[System.Windows.Forms.FlatStyle]::Flat;$scanBtn.Font=New-Object System.Drawing.Font("Segoe UI",10,[System.Drawing.FontStyle]::Bold);$mainPanel.Controls.Add($scanBtn);$statusLabel=New-Object System.Windows.Forms.Label;$statusLabel.Location=New-Object System.Drawing.Point(20,520);$statusLabel.Size=New-Object System.Drawing.Size(320,30);$statusLabel.Text="Bereit für Scan...";$statusLabel.ForeColor=[System.Drawing.Color]::White;$statusLabel.Font=New-Object System.Drawing.Font("Segoe UI",9);$mainPanel.Controls.Add($statusLabel);Update-Progress "DEFINIERE FUNKTIONEN..." 60;function Initialize-History{$historyDir=Split-Path -Parent $global:historyFile;if(-not(Test-Path $historyDir)){New-Item -ItemType Directory -Path $historyDir -Force|Out-Null};if(Test-Path $global:historyFile){try{$historyJson=Get-Content -Path $global:historyFile -Raw;if($historyJson){$history=$historyJson|ConvertFrom-Json;$global:appHistory.Clear();foreach($entry in $history){$entryObj=[PSCustomObject]@{Time=if($entry.Time){$entry.Time}else{$entry.DateTime};Program="TEAM ASTRO Scanner";Result=if($entry.Result){"$($entry.Result)"}else{"Unbekannt"};Count=if($entry.Count){$entry.Count}elseif($entry.SuspiciousCount){$entry.SuspiciousCount}else{0};Details=if($entry.Details){"$($entry.Details)"}else{"Keine Details"}};[void]$global:appHistory.Add($entryObj)}}}catch{$global:appHistory.Clear()}}};function Save-History{try{$historyDir=Split-Path -Parent $global:historyFile;if(-not(Test-Path $historyDir)){New-Item -ItemType Directory -Path $historyDir -Force|Out-Null};$global:appHistory|ConvertTo-Json -Depth 3|Set-Content -Path $global:historyFile -Force}catch{}};function Add-HistoryEntry{param([string]$result,[int]$count,[string]$details);$entry=[PSCustomObject]@{Time=Get-Date -Format "dd.MM.yyyy HH:mm";Program="TEAM ASTRO Scanner";Result=$result;Count=$count;Details=$details};[void]$global:appHistory.Add($entry);if($global:appHistory.Count -gt 100){$global:appHistory.RemoveAt(0)};Save-History;Update-HistoryDisplay};function Update-HistoryDisplay{$historyList.Items.Clear();foreach($entry in $global:appHistory){$item=New-Object System.Windows.Forms.ListViewItem($entry.Time);[void]$item.SubItems.Add($entry.Program);[void]$item.SubItems.Add($entry.Result);[void]$item.SubItems.Add($entry.Count.ToString());[void]$item.SubItems.Add($entry.Details);if($entry.Result -eq "Verdächtig"){$item.ForeColor=[System.Drawing.Color]::Red}else{$item.ForeColor=[System.Drawing.Color]::Green};[void]$historyList.Items.Add($item)}};function IsRandomCode{param($name);return $name -match "^[a-f0-9]{15,}\."}function IsWindowsProcess{param($processName,$processPath);if(-not $processName -or -not $processPath){return $false};$processName=$processName.ToLower();foreach($sysProc in $systemProcesses){if($processName -eq $sysProc.ToLower()){return $true}};foreach($windowsPath in $windowsProcessPaths){if($processPath -and $processPath.StartsWith($windowsPath, [StringComparison]::OrdinalIgnoreCase)){return $true}};return $false};function IsHighlySuspicious{param($name);if(IsRandomCode $name){return $true};$cheatTerms=@("aimbot","wallhack","inject","cheat-engine","1337","1337x","rapidhack","ezfrags","memject","ring0");foreach($term in $cheatTerms){if($name.ToLower().Contains($term.ToLower())){return $true}};return $false};function AddProcessItem{param($name,$processID,$path,$suspicious=$false);$item=New-Object System.Windows.Forms.ListViewItem($name);[void]$item.SubItems.Add($processID.ToString());$pathText=if($path){"$path"}else{"Unbekannt"};[void]$item.SubItems.Add($pathText);if(IsHighlySuspicious $name){$item.ForeColor=[System.Drawing.Color]::Red}elseif($suspicious){$item.ForeColor=[System.Drawing.Color]::Red}elseif(-not (IsWindowsProcess $name $path)){$item.ForeColor=[System.Drawing.Color]::Orange};[void]$processList.Items.Add($item)};function AddFileItem{param($name,$type,$path,$suspicious=$false);$item=New-Object System.Windows.Forms.ListViewItem($name);[void]$item.SubItems.Add($type);[void]$item.SubItems.Add($path);if(IsHighlySuspicious $name){$item.ForeColor=[System.Drawing.Color]::Red}elseif($suspicious){$item.ForeColor=[System.Drawing.Color]::Red}elseif($name -match "^[a-f0-9]{15,}\."){$item.ForeColor=[System.Drawing.Color]::Orange};[void]$filesList.Items.Add($item)};function AddDeletedItem{param($name,$path,$time,$inRecycleBin=$true);$displayName=if($inRecycleBin){"🗑️ $name"}else{$name};$item=New-Object System.Windows.Forms.ListViewItem($time.ToString("dd.MM HH:mm"));[void]$item.SubItems.Add($displayName);$status=if($inRecycleBin){"Papierkorb"}else{"Vollständig gelöscht"};[void]$item.SubItems.Add($status);[void]$item.SubItems.Add($path);if(IsRandomCode $name){$item.ForeColor=[System.Drawing.Color]::Red}elseif($inRecycleBin){$item.ForeColor=[System.Drawing.Color]::Orange}else{$item.ForeColor=[System.Drawing.Color]::Red};[void]$deletedList.Items.Add($item)};function AddAutostartItem{param($name,$path,$suspicious=$false);$item=New-Object System.Windows.Forms.ListViewItem($name);[void]$item.SubItems.Add($path);if(IsHighlySuspicious $name){$item.ForeColor=[System.Drawing.Color]::Red}elseif($suspicious){$item.ForeColor=[System.Drawing.Color]::Red}elseif(-not (IsWindowsProcess $name $path)){$item.ForeColor=[System.Drawing.Color]::Orange};[void]$autostartList.Items.Add($item)};function AddNetworkItem{param($process,$ip,$port,$status,$suspicious=$false);$item=New-Object System.Windows.Forms.ListViewItem($process);[void]$item.SubItems.Add($ip);[void]$item.SubItems.Add($port);[void]$item.SubItems.Add($status);if(IsHighlySuspicious $process){$item.ForeColor=[System.Drawing.Color]::Red}elseif($suspicious){$item.ForeColor=[System.Drawing.Color]::Red}elseif(-not (IsSystemProcess $process)){$item.ForeColor=[System.Drawing.Color]::Orange};[void]$networkList.Items.Add($item)};function AddRoamingItem{param($name,$type,$size);$item=New-Object System.Windows.Forms.ListViewItem($name);[void]$item.SubItems.Add($type);[void]$item.SubItems.Add($size);$itemNameLower=$name.ToLower();if(IsHighlySuspicious $name){$item.ForeColor=[System.Drawing.Color]::Red}elseif($itemNameLower -eq "1337_scripts"){$item.ForeColor=[System.Drawing.Color]::Red}elseif($itemNameLower -like "*1337*" -or $itemNameLower -like "*script*" -or $itemNameLower -like "*mod*" -or $itemNameLower -like "*cheat*" -or $itemNameLower -like "*gg*" -or $itemNameLower -like "*hack*"){$item.ForeColor=[System.Drawing.Color]::Orange}else{$item.ForeColor=[System.Drawing.Color]::White};[void]$roamingList.Items.Add($item)};function AddSystemItem{param($component,$details);$item=New-Object System.Windows.Forms.ListViewItem($component);[void]$item.SubItems.Add($details);$item.ForeColor=[System.Drawing.Color]::LightGreen;[void]$systemList.Items.Add($item)};function IsSystemProcess{param($name);$name=$name.ToLower();foreach($sys in $systemProcesses){if($name -eq $sys.ToLower()){return $true}};return $false};function CheckRecordingProcesses{$global:recordingDetected=$false;$global:detectedRecordingApp="";$processes=Get-Process|Where-Object{$_.Name -ne $null};foreach($proc in $processes){$procName=$proc.Name.ToLower();foreach($recProc in $recordingProcesses){if($procName -like "*$recProc*"){if($procName -like "*discord*"){continue};$global:recordingDetected=$true;$global:detectedRecordingApp=$proc.Name;try{$proc.Kill()}catch{};break}};if($global:recordingDetected){break}};if($global:recordingDetected){$recordingIndicator.Visible=$true;$recordingLabel.Text="AUFNAHME ERKANNT: $global:detectedRecordingApp";$recordingLabel.Visible=$true;$recordingSplashIndicator.Text="● AUFNAHME BLOCKIERT: $global:detectedRecordingApp";$recordingSplashIndicator.Visible=$true}else{$recordingIndicator.Visible=$false;$recordingLabel.Visible=$false;$recordingSplashIndicator.Visible=$false}};function ScanProcesses{Update-Progress "Scanne Prozesse..." 70;Update-Progress "Scanne normale Prozesse..." 71;$processes=Get-Process|Where-Object{$_.Name -ne $null};foreach($proc in $processes){$suspicious=$false;$cheatTerms=@("cheat","hack","trainer","inject","mod","bypass","aimbot","wallhack","esp");foreach($term in $cheatTerms){if($proc.Name -like "*$term*"){$suspicious=$true;break}};AddProcessItem $proc.Name $proc.Id $proc.Path $suspicious;if($suspicious -or (IsHighlySuspicious $proc.Name)){[void]$suspiciousProcesses.Add($proc)}};Update-Progress "Scanne versteckte Prozesse..." 72;try{$wmiProcesses=Get-WmiObject Win32_Process;foreach($wmiProc in $wmiProcesses){$found=$false;foreach($proc in $processes){if($proc.Id -eq $wmiProc.ProcessId){$found=$true;break}};if(-not $found){$suspicious=$true;$name=$wmiProc.Name;$pid=$wmiProc.ProcessId;$path=$wmiProc.ExecutablePath;AddProcessItem "$name (Versteckt)" $pid $path $true;[void]$suspiciousProcesses.Add([PSCustomObject]@{Name="$name (Versteckt)";Id=$pid;Path=$path})}}}catch{};try{$wmiServices=Get-WmiObject Win32_Service|Where-Object{$_.State -eq "Running"};foreach($service in $wmiServices){$serviceProc=Get-WmiObject Win32_Process -Filter "ProcessId=$($service.ProcessId)" -ErrorAction SilentlyContinue;if($serviceProc){$alreadyListed=$false;foreach($proc in $processes){if($proc.Id -eq $service.ProcessId -and $proc.Name -eq $serviceProc.Name){$alreadyListed=$true;break}};if(-not $alreadyListed){$path=$serviceProc.ExecutablePath;AddProcessItem "$($serviceProc.Name) (Dienst: $($service.Name))" $service.ProcessId $path;[void]$suspiciousProcesses.Add([PSCustomObject]@{Name="$($serviceProc.Name) (Dienst: $($service.Name))";Id=$service.ProcessId;Path=$path})}}}}catch{}};function ScanFiles{Update-Progress "Scanne Dateien..." 75;$paths=@("$env:USERPROFILE\Documents","$env:USERPROFILE\Downloads","$env:USERPROFILE\Desktop");$extensions=@(".exe",".dll",".asi",".lua",".bat");foreach($path in $paths){if(Test-Path $path){try{$files=Get-ChildItem -Path $path -Recurse -File -ErrorAction SilentlyContinue|Where-Object{$_.Extension -in $extensions}|Select-Object -First 500;foreach($file in $files){$suspicious=$false;$cheatTerms=@("cheat","hack","trainer","mod","bypass","aimbot");foreach($term in $cheatTerms){if($file.Name -like "*$term*"){$suspicious=$true;break}};AddFileItem $file.Name $file.Extension $file.FullName $suspicious;if($suspicious -or (IsHighlySuspicious $file.Name)){[void]$suspiciousFiles.Add($file)}}}catch{}}};try{$tempFiles=Get-ChildItem -Path $env:TEMP -Recurse -File -ErrorAction SilentlyContinue|Where-Object{$_.Extension -in $extensions};foreach($file in $tempFiles){$suspicious=IsHighlySuspicious $file.Name;if($suspicious){AddFileItem "$($file.Name) (TEMP)" $file.Extension $file.FullName $true;[void]$suspiciousFiles.Add($file)}}}catch{}};function ScanDeletedFiles{Update-Progress "TIEFEN-SCAN GELÖSCHTER DATEIEN..." 80;try{$shell=New-Object -ComObject Shell.Application;$recBin=$shell.NameSpace(0xA);foreach($item in $recBin.Items()){$time=Get-Date;try{$timeStr=$recBin.GetDetailsOf($item,2);if($timeStr){$time=[DateTime]::Parse($timeStr)}}catch{};AddDeletedItem $item.Name $recBin.GetDetailsOf($item,1) $time $true;[void]$deletedItems.Add($item)}}catch{};Update-Progress "TIEFEN-SCAN 25% - WINDOWS-EREIGNISSE" 81;try{$startDate=(Get-Date).AddDays(-1);$events=Get-WinEvent -LogName "Microsoft-Windows-Kernel-File/Operational" -MaxEvents 1000 -ErrorAction SilentlyContinue|Where-Object{$_.Id -eq 16 -and $_.TimeCreated -ge $startDate};foreach($event in $events){$xml=[xml]$event.ToXml();$fileName="";$filePath="";try{$fileName=$xml.Event.EventData.Data|Where-Object{$_.Name -eq "FileName"}|Select-Object -ExpandProperty "#text";$filePath=$xml.Event.EventData.Data|Where-Object{$_.Name -eq "FilePath"}|Select-Object -ExpandProperty "#text"}catch{};if($fileName -and $filePath -and $fileName -match '\.(exe|dll|asi|lua|bat)$'){$fullPath="$filePath\$fileName";if(-not(Test-Path $fullPath)){AddDeletedItem $fileName $filePath $event.TimeCreated $false}}}}catch{};Update-Progress "TIEFEN-SCAN 50% - USN JOURNAL" 82;try{$drive="C:";$yesterday=(Get-Date).AddDays(-1);$output=fsutil usn readjournal $drive csv|ConvertFrom-Csv;$deletedEntries=$output|Where-Object{$_.Reason -match "0x80000200" -and $_.FileName -match '\.(exe|dll|asi|lua|bat)$'};foreach($entry in $deletedEntries){try{$fileTime=[DateTime]::ParseExact($entry.TimeStamp, "MM/dd/yyyy HH:mm:ss", $null);if($fileTime -ge $yesterday){$fileName=$entry.FileName;$filePath=[System.IO.Path]::GetDirectoryName($entry.FileName);if(-not(Test-Path "$filePath\$fileName")){AddDeletedItem $fileName $filePath $fileTime $false}}}catch{}}}catch{};Update-Progress "TIEFEN-SCAN 75% - TEMPORÄRE DATEIEN" 83;$tempPaths=@("$env:TEMP","$env:USERPROFILE\AppData\Local\Temp","C:\Windows\Temp");foreach($tempPath in $tempPaths){if(Test-Path $tempPath){try{$yesterday=(Get-Date).AddDays(-1);$tempFiles=Get-ChildItem -Path $tempPath -Recurse -File -ErrorAction SilentlyContinue|Where-Object{$_.LastWriteTime -ge $yesterday -and $_.Extension -match '\.(exe|dll|asi|lua|bat|tmp|bak|old|log)$'};foreach($file in $tempFiles){if($file.Name -match "^[a-f0-9]{15,}\." -or $file.Name -match "^(~|backup_)"){AddDeletedItem "$($file.Name) (TEMP)" $file.Directory $file.LastWriteTime $false}}}catch{}}};Update-Progress "TIEFEN-SCAN 90% - PREFETCH" 84;try{$prefetchPath="C:\Windows\Prefetch";if(Test-Path $prefetchPath){$prefetchFiles=Get-ChildItem -Path $prefetchPath -File -Filter "*.pf" -ErrorAction SilentlyContinue;foreach($pfFile in $prefetchFiles){$baseName=$pfFile.Name.Split('-')[0];$executableName="$baseName.exe";$lastAccessTime=$pfFile.LastAccessTime;$runCount=0;try{$pfContent=[System.IO.File]::ReadAllBytes($pfFile.FullName);$runCountIndex=$pfContent.IndexOf([byte]0x74);if($runCountIndex -gt 0 -and $runCountIndex+4 -lt $pfContent.Length){$runCount=[BitConverter]::ToUInt32($pfContent,$runCountIndex+1)}}catch{};$suspicious=$false;$highlySuspicious=IsHighlySuspicious $baseName;$cheatTerms=@("cheat","hack","trainer","inject","mod","bypass","aimbot","wallhack","esp");foreach($term in $cheatTerms){if($baseName -like "*$term*"){$suspicious=$true;break}};$detailText="Ausführungen: $runCount";$allProcesses=Get-Process|Select-Object -ExpandProperty Name;$running=($allProcesses -contains $baseName);$displayStatus=if($running){"Prefetch (Aktiv)"}else{"Prefetch (Inaktiv)"};$item=New-Object System.Windows.Forms.ListViewItem($lastAccessTime.ToString("dd.MM HH:mm"));[void]$item.SubItems.Add($executableName);[void]$item.SubItems.Add($displayStatus);[void]$item.SubItems.Add("$prefetchPath - $detailText");if($highlySuspicious -or $suspicious){$item.ForeColor=[System.Drawing.Color]::Red}elseif(-not $running){$item.ForeColor=[System.Drawing.Color]::Orange};[void]$deletedList.Items.Add($item)}}}catch{};Update-Progress "TIEFEN-SCAN 100% - ABGESCHLOSSEN" 85};function ScanAutostart{Update-Progress "Scanne Autostart..." 85;$regPaths=@("HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run","HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run","HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce","HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce");foreach($regPath in $regPaths){try{if(Test-Path $regPath){$entries=Get-ItemProperty -Path $regPath -ErrorAction SilentlyContinue;if($entries){$entries.PSObject.Properties|Where-Object{$_.Name -notlike "PS*"}|ForEach-Object{$suspicious=$false;$cheatTerms=@("cheat","hack","trainer","mod");foreach($term in $cheatTerms){if($_.Name -like "*$term*" -or $_.Value -like "*$term*"){$suspicious=$true;break}};AddAutostartItem $_.Name $_.Value $suspicious;if($suspicious -or (IsHighlySuspicious $_.Name)){[void]$autoStartItems.Add($_)}}}}}catch{}};try{$scheduledTasks=Get-ScheduledTask|Where-Object{$_.State -ne "Disabled"};foreach($task in $scheduledTasks){$taskName=$task.TaskName;$taskPath=$task.TaskPath;$actions=$task.Actions|Select-Object -First 1;$executable="";if($actions.Execute){$executable=$actions.Execute};$suspicious=$false;$cheatTerms=@("cheat","hack","trainer","mod","inject");foreach($term in $cheatTerms){if($taskName -like "*$term*" -or $executable -like "*$term*"){$suspicious=$true;break}};if(IsHighlySuspicious $taskName -or IsHighlySuspicious $executable){$suspicious=$true};if($suspicious -or (-not (IsWindowsProcess $taskName $executable) -and -not $taskPath.StartsWith("\Microsoft\"))){AddAutostartItem "$taskName (Geplante Aufgabe)" $executable $suspicious;[void]$autoStartItems.Add([PSCustomObject]@{Name="$taskName (Geplante Aufgabe)";Path=$executable})}}}catch{}};function ScanNetwork{Update-Progress "Scanne Netzwerk..." 90;try{$connections=Get-NetTCPConnection -State Established -ErrorAction SilentlyContinue;foreach($conn in $connections){$processName="Unknown";try{$proc=Get-Process -Id $conn.OwningProcess -ErrorAction SilentlyContinue;if($proc){$processName=$proc.Name}}catch{};if($processName.ToLower() -like "*discord*"){continue};$suspicious=$false;if($conn.RemotePort -in @(1337,6666,8888,9999)){$suspicious=$true};AddNetworkItem $processName $conn.RemoteAddress $conn.RemotePort "Established" $suspicious;if($suspicious -or (IsHighlySuspicious $processName) -or (-not (IsSystemProcess $processName))){[void]$networkConnections.Add($conn)}}}catch{}};function ScanRoaming{Update-Progress "Scanne Roaming..." 95;$roamingPath="$env:APPDATA";if(Test-Path $roamingPath){try{$items=Get-ChildItem -Path $roamingPath -ErrorAction SilentlyContinue;foreach($item in $items){$size=if($item.PSIsContainer){"-"}else{"$([math]::Round($item.Length/1KB,1)) KB"};$type=if($item.PSIsContainer){"Ordner"}else{"Datei"};AddRoamingItem $item.Name $type $size;[void]$roamingItems.Add($item)}}catch{}}};function ScanSystem{AddSystemItem "Betriebssystem" "$((Get-WmiObject Win32_OperatingSystem).Caption)";AddSystemItem "Prozessor" "$((Get-WmiObject Win32_Processor).Name)";$memory=(Get-WmiObject Win32_OperatingSystem);AddSystemItem "Arbeitsspeicher" "$([math]::Round($memory.TotalVisibleMemorySize/1MB,1)) GB";try{$gta=Get-Process -Name "GTA5","GTAV" -ErrorAction SilentlyContinue;if($gta){AddSystemItem "GTA V Status" "Läuft (PID: $($gta.Id))"}else{AddSystemItem "GTA V Status" "Nicht aktiv"}}catch{AddSystemItem "GTA V Status" "Nicht gefunden"}};function RunFullScan{foreach($list in $tabControls){$list.Items.Clear()};$suspiciousProcesses.Clear();$suspiciousFiles.Clear();$deletedItems.Clear();$autoStartItems.Clear();$networkConnections.Clear();$roamingItems.Clear();CheckRecordingProcesses;ScanProcesses;ScanFiles;ScanDeletedFiles;ScanAutostart;ScanNetwork;ScanRoaming;ScanSystem;$totalSuspicious=$suspiciousProcesses.Count+$suspiciousFiles.Count;$result=if($totalSuspicious -gt 0){"Verdächtig"}else{"Sauber"};$details="Prozesse: $($suspiciousProcesses.Count), Dateien: $($suspiciousFiles.Count)";if($global:recordingDetected){$details+=" [AUFNAHME BLOCKIERT: $global:detectedRecordingApp]"};Add-HistoryEntry $result $totalSuspicious $details;Update-Progress "Scan abgeschlossen!" 100};$scanBtn.Add_Click({if(-not $global:scanRunning){$global:scanRunning=$true;$scanBtn.Enabled=$false;$statusLabel.Text="Führe Scan durch...";RunFullScan;$statusLabel.Text="Scan abgeschlossen.";$global:scanRunning=$false;$scanBtn.Enabled=$true}});$splashRecordingTimer=New-Object System.Windows.Forms.Timer;$splashRecordingTimer.Interval=1000;$splashRecordingTimer.Add_Tick({CheckRecordingProcesses});$splashRecordingTimer.Start();$recordingTimer=New-Object System.Windows.Forms.Timer;$recordingTimer.Interval=1000;$recordingTimer.Add_Tick({CheckRecordingProcesses});$recordingTimer.Start();$mainWindow.Add_FormClosing({$recordingTimer.Stop();$splashRecordingTimer.Stop();foreach($blocker in $blockerWindows){$blocker.Close()}});Initialize-History;Update-HistoryDisplay;Update-Progress "ÜBERPRÜFE AUF AUFNAHME-SOFTWARE..." 50;CheckRecordingProcesses;Update-Progress "Bereit!" 100;Start-Sleep -Milliseconds 2000;$splashRecordingTimer.Stop();$splashScreen.Close();$mainWindow.Visible=$true;$autoTimer=New-Object System.Windows.Forms.Timer;$autoTimer.Interval=500;$autoTimer.Add_Tick({$autoTimer.Stop();$scanBtn.PerformClick()});$autoTimer.Start();[System.Windows.Forms.Application]::Run($mainWindow)
